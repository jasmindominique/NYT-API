{"version":3,"sources":["main.js"],"names":["console","log","searchEl","document","querySelector","searchBtn","getBtn","results","jasminKey","API_URL_BASE","statusLbl","makeGetRequest","event","preventDefault","searchValue","value","getData","addEventListener","handleGetResponse","response","news","data","docs","i","length","newsStory","createElement","newsData","headline","main","appendChild","body","key","axios","get","then"],"mappings":";;AAAA,CAAC,YAAU;AACXA,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EADW,CAIX;AACA;;AACA,MAAMC,QAAQ,GAAGC,QAAQ,CAACC,aAAT,CAAuB,cAAvB,CAAjB;AACA,MAAMC,SAAS,GAAGF,QAAQ,CAACC,aAAT,CAAuB,iBAAvB,CAAlB;AACA,MAAME,MAAM,GAAGH,QAAQ,CAACC,aAAT,CAAuB,cAAvB,CAAf;AACA,MAAMG,OAAO,GAAGJ,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAhB;AACA,MAAMI,SAAS,GAAG,kCAAlB;AACA,MAAMC,YAAY,GAAG,0DAArB;AACA,MAAMC,SAAS,GAAGP,QAAQ,CAACC,aAAT,CAAuB,iBAAvB,CAAlB,CAZW,CAcX;AACA;;AACA,WAASO,cAAT,CAAwBC,KAAxB,EAA8B;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AACA,QAAMC,WAAW,GAAGZ,QAAQ,CAACa,KAA7B;AACAf,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCa,WAAlC,EAH8B,CAGiB;;AAC/CE,IAAAA,OAAO,CAACF,WAAD,CAAP;AACC,GArBU,CAuBX;;;AACAR,EAAAA,MAAM,CAACW,gBAAP,CAAwB,OAAxB,EAAiCN,cAAjC;AACAX,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;;AAEA,WAASiB,iBAAT,CAA2BC,QAA3B,EAAoC;AACpCnB,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBkB,QAAxB;AAEA,QAAMC,IAAI,GAAGD,QAAQ,CAACE,IAAT,CAAcC,IAA3B,CAHoC,CAGH;AAChC;AAEA;;AACA,SAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAGH,IAAI,CAACI,MAAvB,EAA+BD,CAAC,EAAhC,EAAmC;AAClC,UAAIE,SAAS,GAAGtB,QAAQ,CAACuB,aAAT,CAAuB,KAAvB,CAAhB;AACA,UAAIC,QAAQ,GAAGP,IAAI,CAACG,CAAD,CAAJ,CAAQK,QAAR,CAAiBC,IAAhC,CAFkC,CAEI;;AAEtCJ,MAAAA,SAAS,CAACK,WAAV,CAAsBH,QAAtB;AACAxB,MAAAA,QAAQ,CAAC4B,IAAT,CAAcD,WAAd,CAA0BL,SAA1B;AAEAzB,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACA;AACD;;AAED,WAASe,OAAT,CAAiBgB,GAAjB,EAAqB;AACrBC,IAAAA,KAAK,CAACC,GAAN,CAAUzB,YAAY,GAAG,KAAf,GAAuBuB,GAAvB,GAA6B,WAA7B,GAA2CxB,SAArD,EACC2B,IADD,CACMjB,iBADN;AAEE;AAED,CAlDD,I,CAqDA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["(function(){\nconsole.log('hooking up form')\n\n\n//We start by declaring our variable - Hooking up our html to our JS \n// const keyEl = document.querySelector('[name=\"key\"]')\nconst searchEl = document.querySelector('[name=\"key\"]')\nconst searchBtn = document.querySelector('[name=\"search\"]')\nconst getBtn = document.querySelector('[name=\"get\"]')\nconst results = document.querySelector('.results')\nconst jasminKey = \"box4ih3gXj0zOvhTorY6KFdKWUS260gX\";\nconst API_URL_BASE = 'https://api.nytimes.com/svc/search/v2/articlesearch.json'\nconst statusLbl = document.querySelector('[name=\"status\"]')\n\n//Setup some functions to respond to what we want them to do \n// It's going to take an \"event\" a.k.a parameter \nfunction makeGetRequest(event){\nevent.preventDefault()\nconst searchValue = searchEl.value\nconsole.log('value of the key: ', searchValue) //we have to know what the value of \"key\" is\ngetData(searchValue)\n}\n\n//add an event listener to the \"search\" button\ngetBtn.addEventListener('click', makeGetRequest)\nconsole.log('Button was clicked')\n\nfunction handleGetResponse(response){\nconsole.log('response', response)\n\nconst news = response.data.docs; //?\n //once in the console this can be found nested within the data - use \"example-key-12345\" you will find this value to be nested in response > data > data > value \n\n //Now I want to display my data on the screen\n for (var i=0; i < news.length; i++){\n\t let newsStory = document.createElement(\"div\");\n\t let newsData = news[i].headline.main; //from the API these are the keywords needed- headling and main info\n \n\t newsStory.appendChild(newsData);\n\t document.body.appendChild(newsStory);\n\n\t console.log(\"news stories are on the screen\")\n\t}\n}\n\nfunction getData(key){\naxios.get(API_URL_BASE + \"?q=\" + key + \"&api-key=\" + jasminKey)\n.then(handleGetResponse)\n\t}\n\n})()\n\n\n// (function(){\n// console.log('hooking up form')\n\n// //We start by declaring our variable - Hooking up our html to our JS \n// const keyEl = document.querySelector('[name=\"key\"]')\n// const valueEl = document.querySelector('[name=\"value\"]')\n// const getBtn = document.querySelector('[name=\"get\"]')\n// const postBtn = document.querySelector('[name=\"post\"]')\n// const API_URL_BASE = ('http://circuslabs.net:3000/data/')\n// const statusLbl = document.querySelector('[name=\"status\"]')\n\n// //Setup some functions to respond to what we want them to do \n// // It's going to take an \"event\" a.k.a parameter \n// function makeGetRequest(event){\n// event.preventDefault() \n// const keyValue = keyEl.value\n// console.log('value of the key: ', keyValue) //we have to know what the value of \"key\" is\n// getData(keyValue)\n// }\n\n// //add an event listener to the \"get\" button\n// getBtn.addEventListener('click', makeGetRequest)\n// postBtn.addEventListener('click', makePostRequest)\n\n\n// function handleGetResponse(response){\n// console.log('response', response)\n// const value = response.data.data.value //once in the console this can be found nested within the data - use \"example-key-12345\" you will find this value to be nested in response > data > data > value \n// valueEl.value = value \n// }\n\n// function getData(keyValue) {\n// console.log('fetching with GET: ' + keyValue)\n// axios.get(API_URL_BASE + keyValue)\n// .then(handleGetResponse)\n// }\n\n// function makePostRequest(event){\n// event.preventDefault()\n// const keyValue = keyEl.value\n// const valueValue = valueEl.value\n// console.log('goint to post: ', valueValue, keyValue)\n// postData(keyValue, valueValue)\t\n// }\n\n// function handlePostResponse(response){\n// console.log('response', response)\n// statusLbl.textContent = \"Status\" + response.data.message //ths is the message from the server\n\n// setTimeout(function(){\n// statusLbl.textContent = \"\"\n// }, 2500) //putting on a timer for the message to hide after the post button is hit\n// }\n\n// function postData(keyValue, valueValue){\n// console.log('sending a post', keyValue, valueValue)\n// const payLoad = {  \n// type: 'string',\n// value: valueValue\n// }\n// axios.post(API_URL_BASE + keyValue, payLoad)\n// .then(handlePostResponse)\n// }\n\n// })()"],"file":"main.js"}